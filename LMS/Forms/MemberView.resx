<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOW
        IQDzliEB85YhEPOWIS3zliFI85YhV/OWIVfzliFI85YhLfOWIRDzliEB85YhAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOW
        IQDzliEF85YhOPOWIYnzliHJ85Yh6/OWIfnzliH985Yh/fOWIfnzliHr85YhyvOWIYrzliE485YhBfOW
        IQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOW
        IQDzliEA85YhKfOWIZvzliHt85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        Ie3zliGb85YhKfOYIQDzliEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzliEA85YhAvOWIVPzliHZ85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliHZ85YhU/OWIQLzliEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA85YhAPOWIQLzliFk85Yh7fOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIP/zliD/85Yg//OW
        IP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHt85YhZfOWIQLzliEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPOWIQDzliEA85YhVPOWIe3zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliD/9Jop//Sb
        LP/0myz/9Jop//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHt85YhVPOWIQDzliEAAAAAAAAA
        AAAAAAAAAAAAAAAAAADzliIA85YhAPOWISrzliHY85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Uf//ay
        Xf/848T//OjP//zoz//848T/9rJd//OVH//zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHY85YhKvOW
        IQDzlyIAAAAAAAAAAAAAAAAAAAAAAPOWIQDzliEF85Yhm/OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliD/+tSk///////////////////////61KT/85Yg//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliGb85YhBfOWIQAAAAAAAAAAAAAAAAAAAAAA85YhAPOWITjzliHs85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OVH//2sVr//evU/////////////evU//axWv/zlR//85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIezzliE485YhAAAAAAAAAAAAAAAAAPOWIQDzliEA85YhifOWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OUHP/3vXP////+/////v/3vXP/85Qc//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIYnzliEA85YhAAAAAAAAAAAA85YhAPOWIRDzliHJ85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Qd//e7cP////7////+//e7cP/zlB3/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85YhyfOWIRDzliEAAAAAAAAAAADzliEA85YhLfOW
        IevzliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zlB3/97tw/////v////7/97tw//OU
        Hf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHq85YhLfOWIQAAAAAAAAAAAPOW
        IQDzliFI85Yh+POWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OUHf/3u3D////+////
        /v/3u3D/85Qd//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIfjzliFI85YhAAAA
        AAAAAAAA85YhAPOWIVfzliH985Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Qd//e9
        c/////7////+//e7cP/zlB3/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh/fOW
        IVfzliEAAAAAAAAAAADzliEA85YhV/OWIf3zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OV
        H//2slz//ezW//////////7/97tw//OUHf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH985YhV/OWIQAAAAAAAAAAAPOWIQDzliFI85Yh+POWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yg//rUpP/////////////+/P/3uWr/85Qd//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIfjzliFI85YhAAAAAAAAAAAA85YhAPOWIS3zliHr85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zlR//9rJb//ziwv/86M7/+ter//ShOP/zlSD/85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh6vOWIS3zliEAAAAAAAAAAADzliEA85YhEPOWIcnzliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zlSD/85kn//OZKP/zliH/85Uf//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHJ85YhEPOWIQAAAAAAAAAAAPOWIQDzliEA85YhifOW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIP/0nS//+L95//jAef/0nTD/85Yg//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIYnzliEA85YhAAAAAAAAAAAAAAAAAPOW
        IQDzliE485Yh7POWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Uf//nIi/////7////+//nI
        i//zlR//85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHs85YhOPOWIQAAAAAAAAAAAAAA
        AAAAAAAA85YhAPOWIQXzliGb85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliD/+tKg////
        ////////+tKg//OWIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIZvzliEF85YhAAAA
        AAAAAAAAAAAAAAAAAADzliIA85YhAPOWISrzliHY85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OV
        H//1qEj/+9y1//vctf/1qEj/85Uf//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliHY85YhKvOW
        IQDzlSEAAAAAAAAAAAAAAAAAAAAAAAAAAADzliEA85YhAPOWIVTzliHt85Yh//OWIf/zliH/85Yh//OW
        If/zliH/85Yh//OVIP/zmCX/85gl//OVIP/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh7fOW
        IVTzliEA85YhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzliEA85YhAvOWIWTzliHt85Yh//OW
        If/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        Ie3zliFl85YhAvOWIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzliEA85YhAvOW
        IVPzliHZ85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliHZ85YhVPOWIQLzliEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADzliEA85UhAPOWISnzliGb85Yh7fOWIf/zliH/85Yh//OWIf/zliH/85Yh//OWIf/zliH/85Yh//OW
        If/zliHt85Yhm/OWISrzliEA85YhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA85YhAPOWIQbzliE485YhifOWIcnzliHr85Yh+fOWIf3zliH985Yh+fOW
        IevzliHK85YhivOWITjzliEG85YhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPOWIQDzliEB85YhEPOWIS3zliFI85YhV/OW
        IVfzliFI85YhLfOWIRDzliEB85YhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////4Af//4AB//8AAP/8AAA/+AAAH/gAAB/wAAAP4AAAB+AA
        AAfgAAAHwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH4AAAB+AAAAfwAAAP+AAAH/gA
        AB/8AAA//wAA//+AAf//4Af///////////8=
</value>
  </data>
</root>